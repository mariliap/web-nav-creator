<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>web-navigation</groupId>
    <artifactId>web-nav-creator</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
		<!-- Set Java Version -->
		<maven.compiler.target>1.8</maven.compiler.target>
        <maven.compiler.source>1.8</maven.compiler.source>
        <!-- Encoding -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <!-- Format used to show the build timestamp in both the version.properties
             file and .jar distribution file -->
        <maven.build.timestamp.format>yyyy-MM-dd[HH.mm]</maven.build.timestamp.format>
        <timestamp>${maven.build.timestamp}</timestamp>
    </properties>

    <build>
        <sourceDirectory>src/main/java</sourceDirectory>
        <!--<finalName>${project.artifactId}-${project.version}(build${maven.build.timestamp})</finalName>-->
        <finalName>${project.artifactId}-${project.version}</finalName>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <excludes>
                    <exclude>**/*.java</exclude>
                    <exclude>*.png</exclude>
                </excludes>
                <!-- Filtering will check if existing resource files have references
                    to properties. Then, replaces the property name with its actual value (see
                    property timestamp) -->
                <filtering>true</filtering>
            </resource>
            <resource>
                <directory>src/main/webapp</directory>
                <excludes>
                    <exclude>**/*.java</exclude>
                    <exclude>*.png</exclude>
                </excludes>
                <filtering>true</filtering>
            </resource>
        </resources>

        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>appassembler-maven-plugin</artifactId>
                    <version>1.1.1</version>
                    <configuration>
                        <copyConfigurationDirectory>false</copyConfigurationDirectory>
                        <configurationDirectory>etc</configurationDirectory>
                        <repositoryName>lib</repositoryName>
                        <repositoryLayout>flat</repositoryLayout>
                        <assembleDirectory>${project.build.directory}/assembly</assembleDirectory>
                        <programs>
                            <program>
                                <mainClass>Main</mainClass>
                                <name>main</name>
                            </program>
                            <program>
                                <mainClass>UpdateApp</mainClass>
                                <name>update</name>
                            </program>
                        </programs>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>


        <plugins>
            <plugin>
                <groupId>org.mortbay.jetty</groupId>
                <artifactId>maven-jetty-plugin</artifactId>
                <version>6.1.26</version>
                <configuration>
                    <connectors>
                        <connector implementation="org.mortbay.jetty.bio.SocketConnector">
                            <port>8080</port>
                        </connector>
                    </connectors>
                    <overrideWebXml>dev_override_web.xml</overrideWebXml>
                </configuration>
            </plugin>

            <plugin>
                <groupId>com.github.eirslett</groupId>
                <artifactId>frontend-maven-plugin</artifactId>
                <version>0.0.29</version>

                <configuration>
                    <nodeVersion>v4.5.0</nodeVersion>
                    <npmVersion>3.9.0</npmVersion>
                    <installDirectory>.</installDirectory>
                    <workingDirectory>.</workingDirectory>
                </configuration>

                <executions>
                    <execution>
                        <id>install node and npm</id>
                        <goals>
                            <goal>install-node-and-npm</goal>
                        </goals>
                    </execution>

                    <execution>
                        <id>npm install</id>
                        <goals>
                            <goal>npm</goal>
                        </goals>
                        <configuration>
                            <arguments>install</arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.codehaus.groovy.maven</groupId>
                <artifactId>gmaven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>webpack</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                        <configuration>
                            <source><![CDATA[
                                /*
                                 * If running in Jetty - compile jsx files when they change
                                 * Otherwise just compile them once
                                 */
                                boolean isJettyRun = false
                                List<String> goals = session.getGoals()
                                String directoryPath = project.getBasedir().getPath()
                                File directoryFile = new File(directoryPath)
                                println directoryPath
                                for (String s : goals)
                                    if (s.equals('jetty:run'))
                                        isJettyRun = true
                                if (isJettyRun) {
                                    def proc_webpack = new ProcessBuilder(["node/node", "node_modules/webpack-dev-server/bin/webpack-dev-server.js", "--inline", "--hot", "--stdin", "--port", "9090", "--content-base", "target/classes/"]).inheritIO().directory(directoryFile).start()
                                } else {
                                    println "Compiling client code..."
                                    def webpack = new ProcessBuilder(["node/node", "node_modules/webpack/bin/webpack.js", "-p", "--progress", "--bail"]).inheritIO().directory(directoryFile)
                                    def env = webpack.environment()
                                    env.put("WAR_NAME", project.build.finalName)
                                    def proc_webpack = webpack.start()
                                    proc_webpack.waitForOrKill(120000)
                                    if(proc_webpack.exitValue() != 0)
                                        throw new org.apache.maven.plugin.MojoFailureException("Error compiling clinet code")
                                }
                                ]]></source>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>

    </build>



    <dependencies>
        <dependency>
            <groupId>org.hsqldb</groupId>
            <artifactId>hsqldb</artifactId>
            <version>2.4.0</version>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-core</artifactId>
            <version>5.2.2.Final</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-webapp</artifactId>
            <version>9.4.1.v20170120</version>
        </dependency>

        <dependency>
            <groupId>org.glassfish.jersey.containers</groupId>
            <artifactId>jersey-container-servlet</artifactId>
            <version>2.23.2</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.ext.cdi</groupId>
            <artifactId>jersey-cdi1x</artifactId>
            <version>2.23.2</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-json-jackson</artifactId>
            <version>2.23.2</version>
        </dependency>

        <dependency>
            <groupId>org.seleniumhq.selenium</groupId>
            <artifactId>selenium-java</artifactId>
            <version>3.8.1</version>
        </dependency>
        <dependency>
            <groupId>io.github.bonigarcia</groupId>
            <artifactId>webdrivermanager</artifactId>
            <version>2.1.0</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <version>1.7.24</version>
        </dependency>

        <dependency>
            <groupId>org.mitre.dsmiley.httpproxy</groupId>
            <artifactId>smiley-http-proxy-servlet</artifactId>
            <version>1.7</version>
            <scope>compile</scope>
        </dependency>
    </dependencies>
</project>